/* tslint:disable */
/* eslint-disable */
/**
 * Task scheduling system
 * Task scheduling system
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProviderEnum } from './ProviderEnum';
import {
    ProviderEnumFromJSON,
    ProviderEnumFromJSONTyped,
    ProviderEnumToJSON,
} from './ProviderEnum';

/**
 * serialize allauth SocialAccounts for use with a REST API
 * @export
 * @interface SocialAccount
 */
export interface SocialAccount {
    /**
     * 
     * @type {number}
     * @memberof SocialAccount
     */
    readonly id: number;
    /**
     * 
     * @type {ProviderEnum}
     * @memberof SocialAccount
     */
    provider: ProviderEnum;
    /**
     * 
     * @type {string}
     * @memberof SocialAccount
     */
    uid: string;
    /**
     * 
     * @type {Date}
     * @memberof SocialAccount
     */
    readonly lastLogin: Date;
    /**
     * 
     * @type {Date}
     * @memberof SocialAccount
     */
    readonly dateJoined: Date;
}

/**
 * Check if a given object implements the SocialAccount interface.
 */
export function instanceOfSocialAccount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "provider" in value;
    isInstance = isInstance && "uid" in value;
    isInstance = isInstance && "lastLogin" in value;
    isInstance = isInstance && "dateJoined" in value;

    return isInstance;
}

export function SocialAccountFromJSON(json: any): SocialAccount {
    return SocialAccountFromJSONTyped(json, false);
}

export function SocialAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): SocialAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'provider': ProviderEnumFromJSON(json['provider']),
        'uid': json['uid'],
        'lastLogin': (new Date(json['last_login'])),
        'dateJoined': (new Date(json['date_joined'])),
    };
}

export function SocialAccountToJSON(value?: SocialAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'provider': ProviderEnumToJSON(value.provider),
        'uid': value.uid,
    };
}

